################################################################################
#
## diagnostics 
#
#################################################################################

ifeq ($(BR2_PACKAGE_DIAGNOSTICS_CUSTOM_GIT),y)
#DIAGNOSTICS_VERSION = origin/master
DIAGNOSTICS_VERSION = $(call qstrip,$(BR2_PACKAGE_DIAGNOSTICS_CUSTOM_REPO_VERSION))
DIAGNOSTICS_SITE = $(call qstrip,$(BR2_PACKAGE_DIAGNOSTICS_CUSTOM_REPO_URL))
DIAGNOSTICS_SITE_METHOD=git
else
DIAGNOSTICS_CUSTOM_TARBALL_LOCATION = $(call qstrip,$(BR2_PACKAGE_DIAGNOSTICS_CUSTOM_TARBALL_LOCATION))
DIAGNOSTICS_SOURCE = $(notdir $(DIAGNOSTICS_CUSTOM_TARBALL_LOCATION))
DIAGNOSTICS_VERSION = $(basename $(basename $(DIAGNOSTICS_SOURCE)))
DIAGNOSTICS_SITE = $(patsubst %/,%,$(dir $(DIAGNOSTICS_CUSTOM_TARBALL_LOCATION)))
endif


DIAGNOSTICS_INSTALL_TARGET = YES

DIAGNOSTICS_DEPENDENCIES += lldb
DIAGNOSTICS_DEPENDENCIES += clrmd
DIAGNOSTICS_DEPENDENCIES += symstore
DIAGNOSTICS_DEPENDENCIES += dotnetruntime

define DIAGNOSTICS_CONFIGURE_CMDS
	$(DIAGNOSTICS_PKGDIR)/config_diag.sh $(BUILD_DIR) $(HOST_DIR) $(BR2_PACKAGE_DIAGNOSTICS_TARGET_ARCH) $(@D) $(STAGING_DIR) $(DIAGNOSTICS_PKGDIR) $(TARGET_DIR)
endef

define DIAGNOSTICS_BUILD_CMDS
$(DIAGNOSTICS_PKGDIR)/build_diag.sh $(BUILD_DIR) $(HOST_DIR) $(BR2_PACKAGE_DIAGNOSTICS_TARGET_ARCH) $(@D) $(STAGING_DIR) $(DIAGNOSTICS_PKGDIR) $(TARGET_DIR)
endef

define DIAGNOSTICS_INSTALL_TARGET_CMDS
	$(DIAGNOSTICS_PKGDIR)/install_diag.sh $(BUILD_DIR) $(HOST_DIR) $(BR2_PACKAGE_DIAGNOSTICS_TARGET_ARCH) $(@D) $(STAGING_DIR) $(DIAGNOSTICS_PKGDIR) $(TARGET_DIR)
endef

$(eval $(generic-package))
